name: 'File Copy'
description: 'Pretends to copy some files and return the number of files copied'
inputs:
  tenantId:
    description: 'The environment to deploy to'
    required: true
  environment:
    description: 'The environment to deploy to'
    required: true
  azureCredentials:
    description: 'The environment to deploy to'
    required: true
outputs:
  copied-files: 
    description: "Number of files copied"
    value: ${{ steps.random-number-generator.outputs.filesNo }}
runs:
  using: "composite"
  steps: 
    - uses: azure/login@v1
      name: 'Azure: Login'
      with:
        creds: ${{ inputs.azureCredentials }}
    
    # Download the required secrets
    - name: 'Azure: Get Secrets'
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: 'kv-dev-mgrlabstf'
        secrets: 'automationClientSecret, automationClientId, subscriptionId'
      id: azureKeyVault

    - name: 'Terraform: Setup Authentication'
      shell: bash
      run: |
        echo "ARM_CLIENT_ID=$automationClientId" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=$automationClientSecret" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=$subscriptionId" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ inputs.tenantId }}" >> $GITHUB_ENV

    - uses: hashicorp/setup-terraform@v1
      name: 'Terraform: Version Pin'
      with:
        terraform_version: ${{ env.tf_version }}

    - name: 'Terraform: Init'
      shell: bash
      id: init
      run: terraform -chdir=${{ env.tf_working_dir }} init

    - name: 'Terraform: Plan'
      shell: bash
      id: plan
      run: terraform -chdir=${{ env.tf_working_dir }} plan -var-file=env/${{ inputs.environment }}.tfvars -out=tf${{ inputs.environment }}.plan

    - name: 'GitHub: Upload Terraform Plan'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.environment }}_plan
        path: ${{ env.tf_working_dir }}/tf${{ inputs.environment }}.plan