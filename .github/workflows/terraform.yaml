name: Terraform IaC

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  runner: 'ubuntu-latest'
  tf_version: '1.0.6'
  tf_working_dir: 'infra'


jobs:
  Plan:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env: [dev, test, prod]
    steps:
    # Checkout the source code
    - uses: actions/checkout@v2
      name: 'Code: Checkout'
    
    # Log into Azure using the Service Principal store in GitHub secrets
    - uses: azure/login@v1
      name: 'Azure: Login'
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Download the required secrets
    - name: 'Azure: Get Secrets'
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: 'kv-dev-mgrlabstf'
        secrets: 'automationClientSecret, automationClientId, subscriptionId'
      id: azureKeyVault
    
    # Explicitly log out of Azure CLI
    - name: 'Azure: Logout'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az logout
          az cache purge
          az account clear
    
    # Terraform Plan Steps
    - name: 'Terraform: Setup Authentication'
      run: |
        echo "ARM_CLIENT_ID=${{ steps.azureKeyVault.outputs.automationClientId }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ steps.azureKeyVault.outputs.automationClientSecret }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ steps.azureKeyVault.outputs.subscriptionId }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV

    - uses: hashicorp/setup-terraform@v1
      name: 'Terraform: Version Pin'
      with:
        terraform_version: ${{ env.tf_version }}
    
    - name: 'Terraform: Init'
      run: terraform -chdir=${{ env.tf_working_dir }} init

    - name: 'Terraform: Plan'
      run: terraform -chdir=${{ env.tf_working_dir }} plan -var-file=env/${{ matrix.env }}.tfvars -out=tf${{ matrix.env }}.plan

    - name: 'GitHub: Upload Terraform Plan'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.env }}_plan
        path: ${{ env.tf_working_dir }}/tf${{ matrix.env }}.plan

  DeployDev:
    name: Deploy to Dev 
    runs-on: ubuntu-latest
    environment: 
      name: dev
    steps:
      - name: Deploy
        run: echo I am deploying!